#!/bin/sh /etc/rc.common

START=97

PIDFILE="/tmp/run/watchvpn"

append_string() {
	local varname="$1"; local add="$2"; local separator="${3:- }"; local actual
	eval "actual=\$$varname"

	new="${actual:+$actual$separator}$add"
	eval "$varname=\$new"
}

timetoseconds() {
	local time=$1
	unset seconds

	{ [ "$time" -ge 1 ] 2> /dev/null && seconds="$time"; } || \
	{ [ "${time%s}" -ge 1 ] 2> /dev/null && seconds="${time%s}"; } || \
	{ [ "${time%m}" -ge 1 ] 2> /dev/null && seconds=$((${time%m}*60)); } || \
	{ [ "${time%h}" -ge 1 ] 2> /dev/null && seconds=$((${time%h}*3600)); } || \
	{ [ "${time%d}" -ge 1 ] 2> /dev/null && seconds=$((${time%d}*86400)); }
}

load_watchvpn() {
	config_get period	$1 period
	config_get pinghosts	$1 pinghosts	"8.8.8.8"
	config_get ifname	$1 ifname	"vpn"

	error=""

	timetoseconds "$period"
	period="$seconds"
	[ "$period" -ge 1 ] \
		|| append_string "error" 'period is not a valid time value (ex: "30"; "4m"; "6h"; "2d")' "; "
	if [ -n "$pingperiod" ]
	then
		timetoseconds "$pingperiod"
		pingperiod="$seconds"
		if [ "$pingperiod" -ge 0 ]
		then
			[ "$pingperiod" -lt "$period" ] \
				|| append_string "error" "pingperiod must be less than period" "; "
		else
			append_string "error" 'pingperiod is not a valid time value (ex: "30"; "4m"; "6h"; "2d")' "; "
		fi
	else
		pingperiod="$((period/10))"
	fi

	[ -n "$error" ] && { logger -p user.err -t "watchvpn" "watchvpn not started - $error"; return; }

	/usr/bin/watchvpn.sh "$period" "$pinghosts" "$ifname" "$pingperiod" &
	logger -p user.info -t "watchvpn" "started task (period=$period;pinghosts=$pinghosts;ifname=$ifname;pingperiod=$pingperiod)"

	echo $! >> "${PIDFILE}.pids"
}

stop() {
	if [ -f "${PIDFILE}.pids" ]
	then
		logger -p user.info -t "watchvpn" "stopping all tasks"

		while read pid
		do
			kill -KILL "$pid"
		done < "${PIDFILE}.pids"

		rm "${PIDFILE}.pids"

		logger -p user.info -t "watchvpn" "all tasks stopped"
	else
		logger -p user.info -t "watchvpn" "no tasks running"
	fi
}

start() {
	[ -f "${PIDFILE}.pids" ] && stop

	config_load system
	if [ -n "$(uci show system.@watchvpn[0])" ] # at least one watchvpn section exists
	then
		logger -p user.info -t "watchvpn" "starting all tasks"
		config_foreach load_watchvpn watchvpn
		logger -p user.info -t "watchvpn" "all tasks started"
	else
		logger -p user.info -t "watchvpn" "no tasks defined"
	fi
}
